import chromadb
from dotenv import load_dotenv
import openai
import os

# Carregar vari√°veis de ambiente
load_dotenv()
openai.api_key = os.environ["OPENAI_API_KEY"]

# Inicializar o ChromaDB local
db = chromadb.PersistentClient(path="./chroma")
collection = db.get_collection(name="docling_rag")

# Pergunta do usu√°rio
user_question = input("‚ùì Fa√ßa sua pergunta: ")

# Obter o embedding da pergunta
query_embedding = (
    openai.embeddings.create(
        model="text-embedding-ada-002",
        input=[user_question],
    )
    .data[0]
    .embedding
)

# Buscar os 5 documentos mais relevantes
results = collection.query(
    query_embeddings=[query_embedding],
    n_results=5,
    include=["documents", "metadatas"],
)

# Construir o contexto com os resultados
context = ""
for i, doc in enumerate(results["documents"][0]):
    page = results["metadatas"][0][i]["page"]
    context += f"[P√°gina {page}]: {doc}\n"

# Criar o prompt para o modelo
print("\nüîç Contexto encontrado:" f"\n{context}")

prompt = f"""Voc√™ √© um assistente especializado em responder perguntas com base em documentos fornecidos.

Abaixo est√° o contexto extra√≠do dos documentos, com indica√ß√£o das p√°ginas de onde cada trecho foi retirado:

{context}

Com base apenas nas informa√ß√µes acima, responda de forma clara e objetiva √† seguinte pergunta do usu√°rio:

"{user_question}"

Regras importantes:
- Sempre cite explicitamente as p√°ginas dos documentos usados na resposta (ex: [P√°gina X]).
- Se a resposta n√£o estiver presente nos documentos, responda: "Desculpe, n√£o sei.".
- N√£o inclua informa√ß√µes externas ou inventadas.

Responda em portugu√™s.
"""

# Chamada ao modelo GPT-4o-mini
response = openai.chat.completions.create(
    model="gpt-4o-mini",
    messages=[
        {
            "role": "system",
            "content": "Responda com base nos documentos fornecidos, de forma clara e direta.",
        },
        {"role": "user", "content": prompt},
    ],
)

# Exibir a resposta do chatbot
print("\nü§ñ Resposta do Chatbot:")
print(response.choices[0].message.content)
